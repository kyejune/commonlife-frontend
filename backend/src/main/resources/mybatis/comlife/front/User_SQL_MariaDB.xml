<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">

    <insert id="insertUserExt" parameterType="java.util.Map">
        INSERT
        INTO    `USR_INFO_EXT`
        (
            `USR_ID`,
            `REG_DTTM`,
            `UPD_DTTM`
        )
        VALUES
        (
            #{usrId},
            CURRENT_TIMESTAMP,
            CURRENT_TIMESTAMP
        )
        ON DUPLICATE KEY
	    UPDATE
	      UPD_DTTM=CURRENT_TIMESTAMP;
    </insert>

    <select id="selectUserListForPostById" parameterType="java.util.List" resultType="postUserInfo">
        /* Post에서 이용하는 사용자 목록 조회 */
        SELECT
            USR_INFO.USR_ID,
            USER_NM,
            (
              SELECT
                CONCAT('/imageStore/', IMAGE_IDX, '/m')
              FROM
                CL_IMAGE_INFO JOIN
                CL_IMAGE_TYPE
                  ON CL_IMAGE_INFO.PARENT_TYPE = CL_IMAGE_TYPE.TYPE_IDX AND CL_IMAGE_TYPE.TYPE_NM = 'profile'
              WHERE
                CL_IMAGE_INFO.DEL_YN = 'N' AND
                CL_IMAGE_INFO.PARENT_IDX = USR_INFO.USR_ID
              ORDER BY IMAGE_IDX DESC
                LIMIT 1
            ) AS IMG_SRC,
            IFNULL(USER_ALIAS, USER_NM) AS USER_ALIAS,
            CL_CMPLX_NM AS CMPLX_NM
        FROM
          USR_INFO
            LEFT JOIN
          USR_INFO_EXT
              ON USR_INFO.USR_ID = USR_INFO_EXT.USR_ID
            JOIN
          COMPLEX_M
              ON USR_INFO.CMPLX_ID = COMPLEX_M.CMPLX_ID
            LEFT JOIN
          COMPLEX_M_EXT
              ON COMPLEX_M.CMPLX_ID = COMPLEX_M_EXT.CMPLX_ID
        WHERE
            USR_INFO.USR_ID
        IN
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectUserListById" parameterType="java.util.List" resultType="userExtInfo">
        /* ID리스트로 사용자 조회 */
        SELECT
            U.*,
            (
              SELECT IMAGE_IDX
              FROM CL_IMAGE_INFO AS I
                JOIN CL_IMAGE_TYPE AS T
                ON I.PARENT_TYPE =  T.TYPE_IDX AND T.TYPE_NM = 'profile'
              WHERE I.PARENT_IDX = U.USR_ID
              ORDER BY IMAGE_IDX DESC
              LIMIT 1
            ) AS IMAGE_IDX ,
            UE.USER_ALIAS,
            H.HEAD_NM AS HEAD_NM,
            H.START_DT AS START_DT,
            HE.POINTS AS POINTS
        FROM
            USR_INFO AS U
            LEFT JOIN
            USR_INFO_EXT AS UE
              ON U.USR_ID = UE.USR_ID
            JOIN
            HOME_HEAD_M AS H
              ON U.HEAD_ID = H.HEAD_ID
            LEFT JOIN
            HOME_HEAD_M_EXT AS HE
              ON HE.HOME_HEAD_ID = H.HEAD_ID
        WHERE
            U.USR_ID
            IN
        <foreach collection="list" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectUsrIdByUserIdAndPw" parameterType="java.util.List" resultType="userInfo">
        /* ID/PASSWORD로 USR_ID 가져오기*/
        SELECT
          USR_ID,
          USER_ID
        FROM
          USR_INFO
        WHERE
          USER_ID=#{userId} AND USER_PW=#{userPw}
    </select>

    <select id="selectUsrIdByUserId" parameterType="java.util.List" resultType="userInfo">
        /* ID 중복 검사 확인*/
        SELECT
          USER_ID
        FROM
          USR_INFO
        WHERE
          USER_ID=#{userId}
    </select>

    <select id="selectUserInfoByUserId" parameterType="Map" resultType="Map">
      SELECT
    </select>

</mapper>